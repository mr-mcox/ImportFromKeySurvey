<?xml version="1.0" encoding="UTF-8"?>
<!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.4-b01-. -->
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.4-b01-. -->
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://result.form.v81.api.keysurvey.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://result.form.v81.api.keysurvey.com" name="FormResultManagement">
<types>
<xs:schema xmlns:tns="http://v81.api.keysurvey.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://v81.api.keysurvey.com">

<xs:element name="WSIllegalArgumentException" nillable="true" type="tns:WSFault"/>

<xs:element name="WSInternalServerException" nillable="true" type="tns:WSFault"/>

<xs:element name="WSObjectNotFoundException" nillable="true" type="tns:WSFault"/>

<xs:element name="WSSecurityException" nillable="true" type="tns:WSFault"/>

<xs:complexType name="WSObject">
<xs:sequence>
<xs:element name="versionId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="WSFault">
<xs:sequence>
<xs:element name="error" type="xs:int"/>
<xs:element name="message" type="xs:string" minOccurs="0"/>
<xs:element name="service" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:tns="http://result.form.v81.api.keysurvey.com" xmlns:ns1="http://v81.api.keysurvey.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://result.form.v81.api.keysurvey.com">

<xs:import namespace="http://v81.api.keysurvey.com" schemaLocation="http://www.keysurvey.com:80/Member/api/v81/form/result/FormResultManagementService?xsd=1"/>

<xs:element name="createRespondents" type="tns:createRespondents"/>

<xs:element name="createRespondentsResponse" type="tns:createRespondentsResponse"/>

<xs:element name="deleteRespondent" type="tns:deleteRespondent"/>

<xs:element name="deleteRespondentResponse" type="tns:deleteRespondentResponse"/>

<xs:element name="deleteRespondents" type="tns:deleteRespondents"/>

<xs:element name="deleteRespondentsByActivityDate" type="tns:deleteRespondentsByActivityDate"/>

<xs:element name="deleteRespondentsByActivityDateResponse" type="tns:deleteRespondentsByActivityDateResponse"/>

<xs:element name="deleteRespondentsByEmail" type="tns:deleteRespondentsByEmail"/>

<xs:element name="deleteRespondentsByEmailResponse" type="tns:deleteRespondentsByEmailResponse"/>

<xs:element name="deleteRespondentsByLaunchDate" type="tns:deleteRespondentsByLaunchDate"/>

<xs:element name="deleteRespondentsByLaunchDateResponse" type="tns:deleteRespondentsByLaunchDateResponse"/>

<xs:element name="deleteRespondentsResponse" type="tns:deleteRespondentsResponse"/>

<xs:element name="getFormStatistics" type="tns:getFormStatistics"/>

<xs:element name="getFormStatisticsResponse" type="tns:getFormStatisticsResponse"/>

<xs:element name="getRespondent" type="tns:getRespondent"/>

<xs:element name="getRespondentResponse" type="tns:getRespondentResponse"/>

<xs:element name="getRespondents" type="tns:getRespondents"/>

<xs:element name="getRespondentsByCriteria" type="tns:getRespondentsByCriteria"/>

<xs:element name="getRespondentsByCriteriaResponse" type="tns:getRespondentsByCriteriaResponse"/>

<xs:element name="getRespondentsByCriteriaWithIncompletes" type="tns:getRespondentsByCriteriaWithIncompletes"/>

<xs:element name="getRespondentsByCriteriaWithIncompletesResponse" type="tns:getRespondentsByCriteriaWithIncompletesResponse"/>

<xs:element name="getRespondentsComplete" type="tns:getRespondentsComplete"/>

<xs:element name="getRespondentsCompleteResponse" type="tns:getRespondentsCompleteResponse"/>

<xs:element name="getRespondentsPartial" type="tns:getRespondentsPartial"/>

<xs:element name="getRespondentsPartialResponse" type="tns:getRespondentsPartialResponse"/>

<xs:element name="getRespondentsResponse" type="tns:getRespondentsResponse"/>

<xs:element name="getResponse" type="tns:getResponse"/>

<xs:element name="getResponseResponse" type="tns:getResponseResponse"/>

<xs:element name="getResponses" type="tns:getResponses"/>

<xs:element name="getResponsesResponse" type="tns:getResponsesResponse"/>

<xs:element name="saveResponses" type="tns:saveResponses"/>

<xs:element name="saveResponsesResponse" type="tns:saveResponsesResponse"/>

<xs:element name="updateRespondents" type="tns:updateRespondents"/>

<xs:element name="updateRespondentsResponse" type="tns:updateRespondentsResponse"/>

<xs:element name="wsAnswerMatrixOptionResponse" type="tns:WSAnswerMatrixOptionResponse"/>

<xs:element name="wsAnswerMatrixResponse" type="tns:WSAnswerMatrixResponse"/>

<xs:element name="wsAnswerMatrixTextResponse" type="tns:WSAnswerMatrixTextResponse"/>

<xs:element name="wsAnswerPickResponse" type="tns:WSAnswerPickResponse"/>

<xs:element name="wsAnswerResponse" type="tns:WSAnswerResponse"/>

<xs:element name="wsAnswerTextResponse" type="tns:WSAnswerTextResponse"/>

<xs:element name="wsQuestionResponse" type="tns:WSQuestionResponse"/>

<xs:element name="wsRespondent" type="tns:WSRespondent"/>

<xs:element name="wsRespondentStatus" type="tns:WSRespondentStatus"/>

<xs:complexType name="updateRespondents">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
<xs:element name="respondents" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="WSRespondent">
<xs:complexContent>
<xs:extension base="ns1:WSObject">
<xs:sequence>
<xs:element name="anonym" type="xs:boolean"/>
<xs:element name="code" type="xs:string" minOccurs="0"/>
<xs:element name="deleted" type="xs:boolean"/>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="formId" type="xs:long"/>
<xs:element name="ipAddress" type="xs:string" minOccurs="0"/>
<xs:element name="launchDate" type="xs:dateTime"/>
<xs:element name="reportLink" type="xs:string" minOccurs="0"/>
<xs:element name="respondentId" type="xs:long"/>
<xs:element name="resubmit" type="xs:boolean"/>
<xs:element name="score" type="xs:double"/>
<xs:element name="status" type="tns:WSRespondentStatus" minOccurs="0"/>
<xs:element name="submitDate" type="xs:dateTime"/>
<xs:element name="submitStartDate" type="xs:dateTime"/>
<xs:element name="test" type="xs:boolean"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="updateRespondentsResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="saveResponses">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
<xs:element name="responses" type="tns:WSQuestionResponse" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="WSQuestionResponse">
<xs:complexContent>
<xs:extension base="ns1:WSObject">
<xs:sequence>
<xs:element name="answerResponses" type="tns:WSAnswerResponse" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
<xs:element name="questionId" type="xs:long"/>
<xs:element name="respondentId" type="xs:long"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSAnswerResponse">
<xs:complexContent>
<xs:extension base="ns1:WSObject">
<xs:sequence>
<xs:element name="answerId" type="xs:long"/>
<xs:element name="respondentId" type="xs:long"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSAnswerTextResponse">
<xs:complexContent>
<xs:extension base="tns:WSAnswerResponse">
<xs:sequence>
<xs:element name="text" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSAnswerPickResponse">
<xs:complexContent>
<xs:extension base="tns:WSAnswerResponse">
<xs:sequence>
<xs:element name="value" type="xs:long"/>
<xs:element name="weight" type="xs:double"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSAnswerMatrixResponse">
<xs:complexContent>
<xs:extension base="tns:WSAnswerResponse">
<xs:sequence>
<xs:element name="patternColumnIndex" type="xs:int" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSAnswerMatrixOptionResponse">
<xs:complexContent>
<xs:extension base="tns:WSAnswerMatrixResponse">
<xs:sequence>
<xs:element name="responseIndex" type="xs:int"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSAnswerMatrixTextResponse">
<xs:complexContent>
<xs:extension base="tns:WSAnswerMatrixResponse">
<xs:sequence>
<xs:element name="response" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="saveResponsesResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getRespondentsByCriteriaWithIncompletes">
<xs:sequence>
<xs:element name="surveyId" type="xs:long"/>
<xs:element name="criteria" type="tns:WSCriteriaNode" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="WSCriteriaNode" abstract="true">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="WSCriteriaLogic">
<xs:complexContent>
<xs:extension base="tns:WSCriteriaNode">
<xs:sequence>
<xs:element name="subNodes" type="tns:WSCriteriaNode" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
<xs:element name="type" type="tns:type" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSCriteriaCondition">
<xs:complexContent>
<xs:extension base="tns:WSCriteriaNode">
<xs:sequence>
<xs:element name="tag" type="xs:string" minOccurs="0"/>
<xs:element name="value" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WSCriteriaDate">
<xs:complexContent>
<xs:extension base="tns:WSCriteriaNode">
<xs:sequence>
<xs:element name="endDate" type="xs:dateTime" minOccurs="0"/>
<xs:element name="startDate" type="xs:dateTime" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="getRespondentsByCriteriaWithIncompletesResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentsByLaunchDate">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
<xs:element name="respondentStatus" type="tns:WSRespondentStatus" minOccurs="0"/>
<xs:element name="startDate" type="xs:dateTime" minOccurs="0"/>
<xs:element name="endDate" type="xs:dateTime" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentsByLaunchDateResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="deleteRespondentsByActivityDate">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
<xs:element name="respondentStatus" type="tns:WSRespondentStatus" minOccurs="0"/>
<xs:element name="startDate" type="xs:dateTime" minOccurs="0"/>
<xs:element name="endDate" type="xs:dateTime" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentsByActivityDateResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getRespondentsByCriteria">
<xs:sequence>
<xs:element name="surveyId" type="xs:long"/>
<xs:element name="criteria" type="tns:WSCriteriaNode" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondentsByCriteriaResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="createRespondents">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
<xs:element name="respondents" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="createRespondentsResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getResponses">
<xs:sequence>
<xs:element name="respondentId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getResponsesResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSQuestionResponse" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondents">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondentsResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondent">
<xs:sequence>
<xs:element name="respondentId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondentResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondents">
<xs:sequence>
<xs:element name="arg0" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentsResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getRespondentsPartial">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondentsPartialResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentsByEmail">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
<xs:element name="respondentStatus" type="tns:WSRespondentStatus" minOccurs="0"/>
<xs:element name="email" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentsByEmailResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getRespondentsComplete">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRespondentsCompleteResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSRespondent" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getFormStatistics">
<xs:sequence>
<xs:element name="formId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getFormStatisticsResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSFormStatistics" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="WSFormStatistics">
<xs:complexContent>
<xs:extension base="ns1:WSObject">
<xs:sequence>
<xs:element name="abandonedMail" type="xs:long"/>
<xs:element name="completeCount" type="xs:long"/>
<xs:element name="completeMail" type="xs:long"/>
<xs:element name="formId" type="xs:long"/>
<xs:element name="incompleteCount" type="xs:long"/>
<xs:element name="incompleteMail" type="xs:long"/>
<xs:element name="respondentCount" type="xs:long"/>
<xs:element name="viewCount" type="xs:long"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="getResponse">
<xs:sequence>
<xs:element name="respondentId" type="xs:long"/>
<xs:element name="questionId" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getResponseResponse">
<xs:sequence>
<xs:element name="return" type="tns:WSQuestionResponse" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondent">
<xs:sequence>
<xs:element name="arg0" type="xs:long"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteRespondentResponse">
<xs:sequence/>
</xs:complexType>

<xs:simpleType name="WSRespondentStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="INCOMPLETE"/>
<xs:enumeration value="COMPLETE"/>
<xs:enumeration value="COMPLETE_MAIL"/>
<xs:enumeration value="ABANDONE_MAIL"/>
<xs:enumeration value="NOT_STARTED"/>
<xs:enumeration value="ALL"/>
</xs:restriction>
</xs:simpleType>

<xs:simpleType name="type">
<xs:restriction base="xs:string">
<xs:enumeration value="AND"/>
<xs:enumeration value="OR"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
</types>
<message name="getResponse">
<part name="parameters" element="tns:getResponse"/>
</message>
<message name="getResponseResponse">
<part name="parameters" element="tns:getResponseResponse"/>
</message>
<message name="WSObjectNotFoundException">
<part xmlns:ns1="http://v81.api.keysurvey.com" name="fault" element="ns1:WSObjectNotFoundException"/>
</message>
<message name="WSInternalServerException">
<part xmlns:ns2="http://v81.api.keysurvey.com" name="fault" element="ns2:WSInternalServerException"/>
</message>
<message name="WSIllegalArgumentException">
<part xmlns:ns3="http://v81.api.keysurvey.com" name="fault" element="ns3:WSIllegalArgumentException"/>
</message>
<message name="WSSecurityException">
<part xmlns:ns4="http://v81.api.keysurvey.com" name="fault" element="ns4:WSSecurityException"/>
</message>
<message name="getRespondent">
<part name="parameters" element="tns:getRespondent"/>
</message>
<message name="getRespondentResponse">
<part name="parameters" element="tns:getRespondentResponse"/>
</message>
<message name="getRespondents">
<part name="parameters" element="tns:getRespondents"/>
</message>
<message name="getRespondentsResponse">
<part name="parameters" element="tns:getRespondentsResponse"/>
</message>
<message name="getResponses">
<part name="parameters" element="tns:getResponses"/>
</message>
<message name="getResponsesResponse">
<part name="parameters" element="tns:getResponsesResponse"/>
</message>
<message name="deleteRespondents">
<part name="parameters" element="tns:deleteRespondents"/>
</message>
<message name="deleteRespondentsResponse">
<part name="parameters" element="tns:deleteRespondentsResponse"/>
</message>
<message name="getRespondentsByCriteria">
<part name="parameters" element="tns:getRespondentsByCriteria"/>
</message>
<message name="getRespondentsByCriteriaResponse">
<part name="parameters" element="tns:getRespondentsByCriteriaResponse"/>
</message>
<message name="getRespondentsByCriteriaWithIncompletes">
<part name="parameters" element="tns:getRespondentsByCriteriaWithIncompletes"/>
</message>
<message name="getRespondentsByCriteriaWithIncompletesResponse">
<part name="parameters" element="tns:getRespondentsByCriteriaWithIncompletesResponse"/>
</message>
<message name="getRespondentsComplete">
<part name="parameters" element="tns:getRespondentsComplete"/>
</message>
<message name="getRespondentsCompleteResponse">
<part name="parameters" element="tns:getRespondentsCompleteResponse"/>
</message>
<message name="getRespondentsPartial">
<part name="parameters" element="tns:getRespondentsPartial"/>
</message>
<message name="getRespondentsPartialResponse">
<part name="parameters" element="tns:getRespondentsPartialResponse"/>
</message>
<message name="getFormStatistics">
<part name="parameters" element="tns:getFormStatistics"/>
</message>
<message name="getFormStatisticsResponse">
<part name="parameters" element="tns:getFormStatisticsResponse"/>
</message>
<message name="deleteRespondent">
<part name="parameters" element="tns:deleteRespondent"/>
</message>
<message name="deleteRespondentResponse">
<part name="parameters" element="tns:deleteRespondentResponse"/>
</message>
<message name="deleteRespondentsByLaunchDate">
<part name="parameters" element="tns:deleteRespondentsByLaunchDate"/>
</message>
<message name="deleteRespondentsByLaunchDateResponse">
<part name="parameters" element="tns:deleteRespondentsByLaunchDateResponse"/>
</message>
<message name="deleteRespondentsByActivityDate">
<part name="parameters" element="tns:deleteRespondentsByActivityDate"/>
</message>
<message name="deleteRespondentsByActivityDateResponse">
<part name="parameters" element="tns:deleteRespondentsByActivityDateResponse"/>
</message>
<message name="deleteRespondentsByEmail">
<part name="parameters" element="tns:deleteRespondentsByEmail"/>
</message>
<message name="deleteRespondentsByEmailResponse">
<part name="parameters" element="tns:deleteRespondentsByEmailResponse"/>
</message>
<message name="saveResponses">
<part name="parameters" element="tns:saveResponses"/>
</message>
<message name="saveResponsesResponse">
<part name="parameters" element="tns:saveResponsesResponse"/>
</message>
<message name="createRespondents">
<part name="parameters" element="tns:createRespondents"/>
</message>
<message name="createRespondentsResponse">
<part name="parameters" element="tns:createRespondentsResponse"/>
</message>
<message name="updateRespondents">
<part name="parameters" element="tns:updateRespondents"/>
</message>
<message name="updateRespondentsResponse">
<part name="parameters" element="tns:updateRespondentsResponse"/>
</message>
<portType name="FormResultManagementService">
<operation name="getResponse">
<input message="tns:getResponse"/>
<output message="tns:getResponseResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
</operation>
<operation name="getRespondent">
<input message="tns:getRespondent"/>
<output message="tns:getRespondentResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getRespondents">
<input message="tns:getRespondents"/>
<output message="tns:getRespondentsResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
</operation>
<operation name="getResponses">
<input message="tns:getResponses"/>
<output message="tns:getResponsesResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="deleteRespondents">
<input message="tns:deleteRespondents"/>
<output message="tns:deleteRespondentsResponse"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
</operation>
<operation name="getRespondentsByCriteria">
<input message="tns:getRespondentsByCriteria"/>
<output message="tns:getRespondentsByCriteriaResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getRespondentsByCriteriaWithIncompletes">
<input message="tns:getRespondentsByCriteriaWithIncompletes"/>
<output message="tns:getRespondentsByCriteriaWithIncompletesResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
</operation>
<operation name="getRespondentsComplete">
<input message="tns:getRespondentsComplete"/>
<output message="tns:getRespondentsCompleteResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="getRespondentsPartial">
<input message="tns:getRespondentsPartial"/>
<output message="tns:getRespondentsPartialResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="getFormStatistics">
<input message="tns:getFormStatistics"/>
<output message="tns:getFormStatisticsResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
</operation>
<operation name="deleteRespondent">
<input message="tns:deleteRespondent"/>
<output message="tns:deleteRespondentResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
</operation>
<operation name="deleteRespondentsByLaunchDate">
<input message="tns:deleteRespondentsByLaunchDate"/>
<output message="tns:deleteRespondentsByLaunchDateResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
</operation>
<operation name="deleteRespondentsByActivityDate">
<input message="tns:deleteRespondentsByActivityDate"/>
<output message="tns:deleteRespondentsByActivityDateResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
</operation>
<operation name="deleteRespondentsByEmail">
<input message="tns:deleteRespondentsByEmail"/>
<output message="tns:deleteRespondentsByEmailResponse"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
</operation>
<operation name="saveResponses">
<input message="tns:saveResponses"/>
<output message="tns:saveResponsesResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="createRespondents">
<input message="tns:createRespondents"/>
<output message="tns:createRespondentsResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
<operation name="updateRespondents">
<input message="tns:updateRespondents"/>
<output message="tns:updateRespondentsResponse"/>
<fault message="tns:WSSecurityException" name="WSSecurityException"/>
<fault message="tns:WSInternalServerException" name="WSInternalServerException"/>
<fault message="tns:WSIllegalArgumentException" name="WSIllegalArgumentException"/>
<fault message="tns:WSObjectNotFoundException" name="WSObjectNotFoundException"/>
</operation>
</portType>
<binding name="FormResultManagementServicePortBinding" type="tns:FormResultManagementService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="getResponse">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
</operation>
<operation name="getRespondent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getRespondents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
</operation>
<operation name="getResponses">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="deleteRespondents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
</operation>
<operation name="getRespondentsByCriteria">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getRespondentsByCriteriaWithIncompletes">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
</operation>
<operation name="getRespondentsComplete">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getRespondentsPartial">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getFormStatistics">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
</operation>
<operation name="deleteRespondent">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
</operation>
<operation name="deleteRespondentsByLaunchDate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
</operation>
<operation name="deleteRespondentsByActivityDate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
</operation>
<operation name="deleteRespondentsByEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
</operation>
<operation name="saveResponses">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="createRespondents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="updateRespondents">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="WSSecurityException">
<soap:fault name="WSSecurityException" use="literal"/>
</fault>
<fault name="WSInternalServerException">
<soap:fault name="WSInternalServerException" use="literal"/>
</fault>
<fault name="WSIllegalArgumentException">
<soap:fault name="WSIllegalArgumentException" use="literal"/>
</fault>
<fault name="WSObjectNotFoundException">
<soap:fault name="WSObjectNotFoundException" use="literal"/>
</fault>
</operation>
</binding>
<service name="FormResultManagement">
<port name="FormResultManagementServicePort" binding="tns:FormResultManagementServicePortBinding">
<soap:address location="http://www.keysurvey.com:80/Member/api/v81/form/result/FormResultManagementService"/>
</port>
</service>
</definitions>